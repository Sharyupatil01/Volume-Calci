// Generated by view binder compiler. Do not edit!
package com.example.volumecalculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.volumecalculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShpereBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnnid;

  @NonNull
  public final EditText enterradiousid;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView resultid;

  @NonNull
  public final TextView shpereid;

  private ActivityShpereBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnnid,
      @NonNull EditText enterradiousid, @NonNull ConstraintLayout main, @NonNull TextView resultid,
      @NonNull TextView shpereid) {
    this.rootView = rootView;
    this.btnnid = btnnid;
    this.enterradiousid = enterradiousid;
    this.main = main;
    this.resultid = resultid;
    this.shpereid = shpereid;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShpereBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShpereBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_shpere, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShpereBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnnid;
      Button btnnid = ViewBindings.findChildViewById(rootView, id);
      if (btnnid == null) {
        break missingId;
      }

      id = R.id.enterradiousid;
      EditText enterradiousid = ViewBindings.findChildViewById(rootView, id);
      if (enterradiousid == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.resultid;
      TextView resultid = ViewBindings.findChildViewById(rootView, id);
      if (resultid == null) {
        break missingId;
      }

      id = R.id.shpereid;
      TextView shpereid = ViewBindings.findChildViewById(rootView, id);
      if (shpereid == null) {
        break missingId;
      }

      return new ActivityShpereBinding((ConstraintLayout) rootView, btnnid, enterradiousid, main,
          resultid, shpereid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
